# Generated by Django 5.2 on 2025-06-27 15:54

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('retro_platform_fighter', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='retrogamesession',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='retrogamestate',
            options={'verbose_name': 'Game State', 'verbose_name_plural': 'Game States'},
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='current_level',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Level must be at least 1'), django.core.validators.MaxValueValidator(10, message='Level cannot exceed 10')]),
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='diamonds',
            field=models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0, message='Diamonds cannot be negative'), django.core.validators.MaxValueValidator(1000, message='Maximum diamonds exceeded')]),
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='lives',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0, message='Lives cannot be negative'), django.core.validators.MaxValueValidator(10, message='Maximum lives exceeded')]),
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='score',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Score cannot be negative'), django.core.validators.MaxValueValidator(1000000, message='Maximum score exceeded')]),
        ),
        migrations.AlterField(
            model_name='retrogamesession',
            name='session_key',
            field=models.CharField(db_index=True, max_length=40, unique=True),
        ),
        migrations.AlterField(
            model_name='retrogamestate',
            name='boss_defeated',
            field=models.BooleanField(default=False, help_text='Whether the boss has been defeated'),
        ),
        migrations.AlterField(
            model_name='retrogamestate',
            name='diamonds_collected',
            field=models.JSONField(default=list, help_text='List of collected diamond IDs'),
        ),
        migrations.AlterField(
            model_name='retrogamestate',
            name='level_completed',
            field=models.BooleanField(default=False, help_text='Whether the current level is completed'),
        ),
        migrations.AlterField(
            model_name='retrogamestate',
            name='robots_defeated',
            field=models.JSONField(default=list, help_text='List of defeated robot IDs'),
        ),
        migrations.AlterField(
            model_name='retrogamestate',
            name='session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_state', to='retro_platform_fighter.retrogamesession'),
        ),
        migrations.AlterField(
            model_name='retrohighscore',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='retrohighscore',
            name='level_reached',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Level must be at least 1'), django.core.validators.MaxValueValidator(10, message='Level cannot exceed 10')]),
        ),
        migrations.AlterField(
            model_name='retrohighscore',
            name='player_name',
            field=models.CharField(help_text='Display name for the high score entry', max_length=50),
        ),
        migrations.AlterField(
            model_name='retrohighscore',
            name='score',
            field=models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0, message='Score cannot be negative'), django.core.validators.MaxValueValidator(1000000, message='Maximum score exceeded')]),
        ),
        migrations.AddIndex(
            model_name='retrogamesession',
            index=models.Index(fields=['score', 'created_at'], name='retro_platf_score_e52c1c_idx'),
        ),
        migrations.AddIndex(
            model_name='retrogamesession',
            index=models.Index(fields=['session_key'], name='session_key_idx'),
        ),
    ]
